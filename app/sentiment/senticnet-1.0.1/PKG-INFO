Metadata-Version: 1.1
Name: senticnet
Version: 1.0.1
Summary: Access Senticnet API using Python
Home-page: https://github.com/yurimalheiros/senticnetapi
Author: Yuri Malheiros
Author-email: yuri@dcx.ufpb.br
License: Copyright © 2012-2016 Yuri Malheiros

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Please acknowledge the authors by citing SenticNet 4 in any research work or presentation containing results obtained in whole or in part through the use of the API.

Description: # Senticnet API
        
        [![Image](https://zenodo.org/badge/doi/10.5281/zenodo.9805.png "DOI") ](http://dx.doi.org/10.5281/zenodo.9805 "DOI")
        
        Simple API to use Senticnet 4 (http://sentic.net/).
        
        
        ## Install
        
        Using pip:
        
        ```
        $ pip install senticnet
        ```
        
        Using the repository code:
        
        ```
        $ python setup.py install
        ```
        
        ## How to use
        
        ```python
        from senticnet.senticnet import Senticnet
        
        sn = Senticnet()
        concept_info = sn.concept('love')
        polarity_value = sn.polarity_value('love')
        polarity_intense = sn.polarity_intense('love')
        moodtags = sn.moodtags('love')
        semantics = sn.semantics('love')
        sentics = sn.sentics('love')
        ```
        
        Also, you can use other languages:
        
        ```python
        from senticnet.senticnet import Senticnet
        
        sn = Senticnet('pt')
        concept_info = sn.concept('amor')
        polarity_value = sn.polarity_value('amor')
        polarity_intense = sn.polarity_intense('amor')
        moodtags = sn.moodtags('amor')
        semantics = sn.semantics('amor')
        sentics = sn.sentics('amor')
        ```
        
        You can find all supported languages here: http://sentic.net/api/
        
        ## About Senticnet
        
        SenticNet is an initiative conceived at the MIT Media Laboratory in 2010 within an industrial Cooperative Awards in Science and Engineering (CASE) research project, funded by the UK Engineering and Physical Sciences Research Council (EPSRC) and born from the collaboration between the University of Stirling, the Media Lab, and Sitekit Labs.
        
        Currently, both the SenticNet knowledge base and the SenticNet framework are being maintained and further developed by the Sentic Team, a multidisciplinary research group based at the School of Computer Engineering of Nanyang Technological University in Singapore, but also by many other sentic enthusiasts around the world.
        
        Please acknowledge the authors by citing SenticNet 4 in any research work or presentation containing results obtained in whole or in part through the use of the API:
        
        *E. Cambria, S. Poria, R. Bajpai, and B. Schuller. SenticNet 4: A semantic resource for sentiment analysis based on conceptual primitives. In: COLING, pp. 2666-2677, Osaka (2016)*
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries
